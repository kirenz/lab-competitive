{
  "hash": "2f817d85b9aa6bbe6382031a2505daf0",
  "result": {
    "markdown": "---\ntitle: Pandas\nlang: en\nsubtitle: 'Basics, Task Overview and Hints'\nauthor: Jan Kirenz\nexecute:\n  eval: true\n  echo: true\nhighlight-style: github\nformat:\n  revealjs:\n    toc: true\n    toc-depth: 1\n    embed-resources: false\n    theme:\n      - dark\n      - ../custom.scss\n    incremental: true\n    transition: slide\n    background-transition: fade\n    transition-speed: slow\n    code-copy: true\n    code-line-numbers: true\n    smaller: false\n    scrollable: true\n    slide-number: c\n    preview-links: auto\n    chalkboard:\n      buttons: false\n    footer: Jan Kirenz\n---\n\n# What is Pandas?\n\n- Pandas is a powerful and flexible open-source data analysis and manipulation library for Python.\n\n- It provides data structures and functions needed to manipulate structured data.\n\n- It usually uses DataFrame objects for data manipulation.\n\n\n# DataFrames\n\n![](/images/dataframe.png)\n\n- A DataFrame is a two-dimensional labeled data structure with columns of potentially different types. \n\n- You can think of it like a spreadsheet or SQL table, or a dictionary of Series objects. \n\n\n## Example of a DataFrame\n\nHere is an example of a DataFrame:\n\n::: {#2aea6ec1 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd  # <1>\n\ndata = {'name': ['Zeynep', 'Anna', 'Tim', 'Sara', 'Elias', 'Admir', 'Lina'],  # <2>\n        'age': [33, 25, 23, 21, 28, 20, 31],\n        'date': ['1990-06-03', '1998-03-12', '2000-01-20', '2002-02-16', '1995-05-02', '2003-06-03', '1992-06-03'],\n        'city': ['Stuttgart', 'Berlin', 'Stuttgart', 'Stuttgart', 'Berlin', 'Munich', 'Stuttgart']}\n\ndf = pd.DataFrame(data)  # <3>\n```\n:::\n\n\n1. Import the module pandas as pd\n2. Create some data in this dictionary style\n3. Transform the data into a Pandas Dataframe\n\n## Inspecting the DataFrame\n\n- Use `.head()`to show the top rows of the Dataframe:  \n\n. . .\n\n::: {#cbd093d1 .cell output-location='fragment' execution_count=2}\n``` {.python .cell-code}\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>age</th>\n      <th>date</th>\n      <th>city</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Zeynep</td>\n      <td>33</td>\n      <td>1990-06-03</td>\n      <td>Stuttgart</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Anna</td>\n      <td>25</td>\n      <td>1998-03-12</td>\n      <td>Berlin</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Tim</td>\n      <td>23</td>\n      <td>2000-01-20</td>\n      <td>Stuttgart</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Sara</td>\n      <td>21</td>\n      <td>2002-02-16</td>\n      <td>Stuttgart</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Elias</td>\n      <td>28</td>\n      <td>1995-05-02</td>\n      <td>Berlin</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Inspecting the DataFrame\n\n- Use `.tail()`to show the last rows of the Dataframe:  \n\n. . .\n\n::: {#81311f1d .cell output-location='fragment' execution_count=3}\n``` {.python .cell-code}\ndf.tail()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>age</th>\n      <th>date</th>\n      <th>city</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2</th>\n      <td>Tim</td>\n      <td>23</td>\n      <td>2000-01-20</td>\n      <td>Stuttgart</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Sara</td>\n      <td>21</td>\n      <td>2002-02-16</td>\n      <td>Stuttgart</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Elias</td>\n      <td>28</td>\n      <td>1995-05-02</td>\n      <td>Berlin</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Admir</td>\n      <td>20</td>\n      <td>2003-06-03</td>\n      <td>Munich</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Lina</td>\n      <td>31</td>\n      <td>1992-06-03</td>\n      <td>Stuttgart</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Inspecting the DataFrame\n\n- Use `df` to get an overview of head and tail: \n\n. . .\n\n::: {#766a89c9 .cell output-location='fragment' execution_count=4}\n``` {.python .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>age</th>\n      <th>date</th>\n      <th>city</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Zeynep</td>\n      <td>33</td>\n      <td>1990-06-03</td>\n      <td>Stuttgart</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Anna</td>\n      <td>25</td>\n      <td>1998-03-12</td>\n      <td>Berlin</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Tim</td>\n      <td>23</td>\n      <td>2000-01-20</td>\n      <td>Stuttgart</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Sara</td>\n      <td>21</td>\n      <td>2002-02-16</td>\n      <td>Stuttgart</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Elias</td>\n      <td>28</td>\n      <td>1995-05-02</td>\n      <td>Berlin</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Admir</td>\n      <td>20</td>\n      <td>2003-06-03</td>\n      <td>Munich</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Lina</td>\n      <td>31</td>\n      <td>1992-06-03</td>\n      <td>Stuttgart</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Inspecting the DataFrame\n\n- Use `.info()`to show metadata  \n\n. . .\n\n::: {#feca33c5 .cell output-location='fragment' execution_count=5}\n``` {.python .cell-code}\ndf.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 7 entries, 0 to 6\nData columns (total 4 columns):\n #   Column  Non-Null Count  Dtype \n---  ------  --------------  ----- \n 0   name    7 non-null      object\n 1   age     7 non-null      int64 \n 2   date    7 non-null      object\n 3   city    7 non-null      object\ndtypes: int64(1), object(3)\nmemory usage: 356.0+ bytes\n```\n:::\n:::\n\n\n## Categorical Data\n\n- Categorical data: `df[column_name] = df[column_name].astype('category')`\n\n. . .\n\n::: {#cac68741 .cell execution_count=6}\n``` {.python .cell-code}\ndf['name'] = df['name'].astype('category')\n```\n:::\n\n\n## Categorical Data\n\n::: {#5768f74f .cell output-location='fragment' execution_count=7}\n``` {.python .cell-code}\ndf.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 7 entries, 0 to 6\nData columns (total 4 columns):\n #   Column  Non-Null Count  Dtype   \n---  ------  --------------  -----   \n 0   name    7 non-null      category\n 1   age     7 non-null      int64   \n 2   date    7 non-null      object  \n 3   city    7 non-null      object  \ndtypes: category(1), int64(1), object(2)\nmemory usage: 663.0+ bytes\n```\n:::\n:::\n\n\n## Categorical Data\n\n- If you want to transform multiple columns:\n\n. . .\n\n::: {#d1a0c0c3 .cell execution_count=8}\n``` {.python .cell-code}\nCAT_LIST = ['name', 'city']  # <1>\n\nfor i in CAT_LIST:  # <2>\n    df[i] = df[i].astype('category')\n```\n:::\n\n\n1. Create a list with the name of the columns\n2. Use a for loop to transfrom the columns\n\n\n## Date Columns\n\n- Use `pd.to_datetime` to change the format into a date object: `df['column_name'] = pd.to_datetime(df['column_name'])`\n\n. . .\n\n::: {#a659fec6 .cell execution_count=9}\n``` {.python .cell-code}\ndf['date'] = pd.to_datetime(df['date'])\n```\n:::\n\n\n## Date Columns \n\n::: {#65b83037 .cell output-location='fragment' execution_count=10}\n``` {.python .cell-code}\ndf.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 7 entries, 0 to 6\nData columns (total 4 columns):\n #   Column  Non-Null Count  Dtype         \n---  ------  --------------  -----         \n 0   name    7 non-null      category      \n 1   age     7 non-null      int64         \n 2   date    7 non-null      datetime64[ns]\n 3   city    7 non-null      category      \ndtypes: category(2), datetime64[ns](1), int64(1)\nmemory usage: 746.0 bytes\n```\n:::\n:::\n\n\n## Date Manipulation\n\n- Pandas provides a robust tool for working with dates, times, and time-indexed data.\n\n- Example for extracting Year from Date: `df['date_column'].dt.year`\n\n. . .\n\n::: {#75c52708 .cell output-location='fragment' execution_count=11}\n``` {.python .cell-code}\ndf['year'] = df['date'].dt.year\n\ndf.head(2)\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>age</th>\n      <th>date</th>\n      <th>city</th>\n      <th>year</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Zeynep</td>\n      <td>33</td>\n      <td>1990-06-03</td>\n      <td>Stuttgart</td>\n      <td>1990</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Anna</td>\n      <td>25</td>\n      <td>1998-03-12</td>\n      <td>Berlin</td>\n      <td>1998</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Date Manipulation\n\n- Example for extracting Month from Date: `df['date_column'].dt.to_period('M')`\n\n. . .\n\n::: {#8782eb58 .cell output-location='fragment' execution_count=12}\n``` {.python .cell-code}\ndf['month_1'] = df['date'].dt.to_period('M')\n\ndf.head(2)\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>age</th>\n      <th>date</th>\n      <th>city</th>\n      <th>year</th>\n      <th>month_1</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Zeynep</td>\n      <td>33</td>\n      <td>1990-06-03</td>\n      <td>Stuttgart</td>\n      <td>1990</td>\n      <td>1990-06</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Anna</td>\n      <td>25</td>\n      <td>1998-03-12</td>\n      <td>Berlin</td>\n      <td>1998</td>\n      <td>1998-03</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Date Manipulation\n\n- Use `dt.month()` to only extract the month as a number\n\n::: {#48a140f3 .cell output-location='fragment' execution_count=13}\n``` {.python .cell-code}\ndf['month_2'] = df['date'].dt.month\n\ndf.head(2)\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>age</th>\n      <th>date</th>\n      <th>city</th>\n      <th>year</th>\n      <th>month_1</th>\n      <th>month_2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Zeynep</td>\n      <td>33</td>\n      <td>1990-06-03</td>\n      <td>Stuttgart</td>\n      <td>1990</td>\n      <td>1990-06</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Anna</td>\n      <td>25</td>\n      <td>1998-03-12</td>\n      <td>Berlin</td>\n      <td>1998</td>\n      <td>1998-03</td>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Date Manipulation\n\n- Use `dt.month_name()` to extract the name of the month\n\n::: {#59dad50c .cell output-location='fragment' execution_count=14}\n``` {.python .cell-code}\ndf['month_3'] = df['date'].dt.month_name()\n\ndf.head(2)\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>age</th>\n      <th>date</th>\n      <th>city</th>\n      <th>year</th>\n      <th>month_1</th>\n      <th>month_2</th>\n      <th>month_3</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Zeynep</td>\n      <td>33</td>\n      <td>1990-06-03</td>\n      <td>Stuttgart</td>\n      <td>1990</td>\n      <td>1990-06</td>\n      <td>6</td>\n      <td>June</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Anna</td>\n      <td>25</td>\n      <td>1998-03-12</td>\n      <td>Berlin</td>\n      <td>1998</td>\n      <td>1998-03</td>\n      <td>3</td>\n      <td>March</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Date Manipulation\n\n- Use `dt.month_name(locale='de_DE')` to extract the name of the month in German\n\n::: {#8fab12b0 .cell output-location='fragment' execution_count=15}\n``` {.python .cell-code}\ndf['month_4'] = df['date'].dt.month_name(locale='de_DE')\n\ndf.head(2)\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>age</th>\n      <th>date</th>\n      <th>city</th>\n      <th>year</th>\n      <th>month_1</th>\n      <th>month_2</th>\n      <th>month_3</th>\n      <th>month_4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Zeynep</td>\n      <td>33</td>\n      <td>1990-06-03</td>\n      <td>Stuttgart</td>\n      <td>1990</td>\n      <td>1990-06</td>\n      <td>6</td>\n      <td>June</td>\n      <td>Juni</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Anna</td>\n      <td>25</td>\n      <td>1998-03-12</td>\n      <td>Berlin</td>\n      <td>1998</td>\n      <td>1998-03</td>\n      <td>3</td>\n      <td>March</td>\n      <td>März</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Creating DataFrame from CSV file\n\n- We can create a DataFrame by importing a CSV file using the `pd.read_csv()` function.\n\n- Example: `df = pd.read_csv('file.csv')`\n\n\n## Creating DataFrame from an external CSV file\n\n- We can also import data from an external source (e.g. GitHub)\n\n. . .\n\n::: {#deea5e5b .cell execution_count=16}\n``` {.python .cell-code}\nLINK = 'https://raw.githubusercontent.com/kirenz/lab-competitive/main/code/ecommerce.csv'  # <1>\n\ndf2 = pd.read_csv(LINK)  # <2>\n```\n:::\n\n\n1. Create a new object with the URL to the data (we call it `LINK`)\n2. Import the data\n\n## Creating DataFrame from an external CSV file\n\n::: {#d222fa5b .cell output-location='fragment' execution_count=17}\n``` {.python .cell-code}\ndf2\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>eshop_name</th>\n      <th>date</th>\n      <th>annual_revenue</th>\n      <th>time_on_site</th>\n      <th>average_rating</th>\n      <th>social_media_followers</th>\n      <th>average_response_time</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>E-ShopA</td>\n      <td>2020-01-31</td>\n      <td>13.35</td>\n      <td>1.09</td>\n      <td>4.17</td>\n      <td>173.76</td>\n      <td>2.35</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>E-ShopA</td>\n      <td>2020-02-29</td>\n      <td>10.74</td>\n      <td>0.56</td>\n      <td>4.79</td>\n      <td>52.69</td>\n      <td>2.58</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>E-ShopA</td>\n      <td>2020-03-31</td>\n      <td>11.91</td>\n      <td>0.57</td>\n      <td>2.92</td>\n      <td>141.79</td>\n      <td>1.54</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>E-ShopA</td>\n      <td>2020-04-30</td>\n      <td>16.38</td>\n      <td>2.44</td>\n      <td>3.68</td>\n      <td>190.57</td>\n      <td>1.92</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>E-ShopA</td>\n      <td>2020-05-31</td>\n      <td>6.52</td>\n      <td>2.07</td>\n      <td>2.67</td>\n      <td>129.49</td>\n      <td>1.49</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>103</th>\n      <td>E-ShopC</td>\n      <td>2022-08-31</td>\n      <td>64.83</td>\n      <td>12.48</td>\n      <td>6.54</td>\n      <td>1529.19</td>\n      <td>1.66</td>\n    </tr>\n    <tr>\n      <th>104</th>\n      <td>E-ShopC</td>\n      <td>2022-09-30</td>\n      <td>31.70</td>\n      <td>7.10</td>\n      <td>3.04</td>\n      <td>664.30</td>\n      <td>0.88</td>\n    </tr>\n    <tr>\n      <th>105</th>\n      <td>E-ShopC</td>\n      <td>2022-10-31</td>\n      <td>27.09</td>\n      <td>5.56</td>\n      <td>2.65</td>\n      <td>538.03</td>\n      <td>0.64</td>\n    </tr>\n    <tr>\n      <th>106</th>\n      <td>E-ShopC</td>\n      <td>2022-11-30</td>\n      <td>56.59</td>\n      <td>9.45</td>\n      <td>4.88</td>\n      <td>968.37</td>\n      <td>1.13</td>\n    </tr>\n    <tr>\n      <th>107</th>\n      <td>E-ShopC</td>\n      <td>2022-12-31</td>\n      <td>66.50</td>\n      <td>11.05</td>\n      <td>5.56</td>\n      <td>1262.25</td>\n      <td>1.28</td>\n    </tr>\n  </tbody>\n</table>\n<p>108 rows × 7 columns</p>\n</div>\n```\n:::\n:::\n\n\n# Key Pandas Functions for Data Analysis\n\n## Mean\n\n- The `mean` function returns the mean of the values for the requested axis.\n\n- Example: `df['column_name'].mean()`\n\n## Mean\n\n::: {#49f57f90 .cell output-location='fragment' execution_count=18}\n``` {.python .cell-code}\ndf['age'].mean()\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```\n25.857142857142858\n```\n:::\n:::\n\n\n...\n\n::: {#9371346d .cell output-location='fragment' execution_count=19}\n``` {.python .cell-code}\ndf['age'].mean().round(2)\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```\n25.86\n```\n:::\n:::\n\n\n## GroupBy\n\n- The `groupby` function is used to split the data into groups based on some criteria.\n\n- Example: `df.groupby('column_name')`\n\n\n## GroupBy\n\n::: {#248fc6db .cell output-location='fragment' execution_count=20}\n``` {.python .cell-code}\ndf.groupby('city')['age'].mean().round(2)\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```\ncity\nBerlin       26.5\nMunich       20.0\nStuttgart    27.0\nName: age, dtype: float64\n```\n:::\n:::\n\n\n## GroupBy\n\n- The groupby operation makes 'column_name' the index of grouped_df. \n\n- If you want to turn 'column_name' back into a regular column and replace the index with default integers, you would use `reset_index()`.\n\n## Reset Index\n\n- `reset_index` is a method to reset index of a Data Frame.\n\n- Example: `df.reset_index()`\n\n## Reset Index\n\n::: {#ba7c629f .cell output-location='fragment' execution_count=21}\n``` {.python .cell-code}\ndf.groupby('city')['age'].mean().round(2).reset_index()\n```\n\n::: {.cell-output .cell-output-display execution_count=21}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>city</th>\n      <th>age</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Berlin</td>\n      <td>26.5</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Munich</td>\n      <td>20.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Stuttgart</td>\n      <td>27.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Rename Columns\n\n- `rename` function is used to change the names of the column labels.\n\n- Example: `df.rename(columns={'old_name1':'new_name1', 'old_name2':'new_name2'})`\n\n\n## Rename Columns\n\n::: {#b7f42aca .cell output-location='fragment' execution_count=22}\n``` {.python .cell-code}\ndf.rename(columns={'date': 'date_new'})\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>age</th>\n      <th>date_new</th>\n      <th>city</th>\n      <th>year</th>\n      <th>month_1</th>\n      <th>month_2</th>\n      <th>month_3</th>\n      <th>month_4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Zeynep</td>\n      <td>33</td>\n      <td>1990-06-03</td>\n      <td>Stuttgart</td>\n      <td>1990</td>\n      <td>1990-06</td>\n      <td>6</td>\n      <td>June</td>\n      <td>Juni</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Anna</td>\n      <td>25</td>\n      <td>1998-03-12</td>\n      <td>Berlin</td>\n      <td>1998</td>\n      <td>1998-03</td>\n      <td>3</td>\n      <td>March</td>\n      <td>März</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Tim</td>\n      <td>23</td>\n      <td>2000-01-20</td>\n      <td>Stuttgart</td>\n      <td>2000</td>\n      <td>2000-01</td>\n      <td>1</td>\n      <td>January</td>\n      <td>Januar</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Sara</td>\n      <td>21</td>\n      <td>2002-02-16</td>\n      <td>Stuttgart</td>\n      <td>2002</td>\n      <td>2002-02</td>\n      <td>2</td>\n      <td>February</td>\n      <td>Februar</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Elias</td>\n      <td>28</td>\n      <td>1995-05-02</td>\n      <td>Berlin</td>\n      <td>1995</td>\n      <td>1995-05</td>\n      <td>5</td>\n      <td>May</td>\n      <td>Mai</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Admir</td>\n      <td>20</td>\n      <td>2003-06-03</td>\n      <td>Munich</td>\n      <td>2003</td>\n      <td>2003-06</td>\n      <td>6</td>\n      <td>June</td>\n      <td>Juni</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Lina</td>\n      <td>31</td>\n      <td>1992-06-03</td>\n      <td>Stuttgart</td>\n      <td>1992</td>\n      <td>1992-06</td>\n      <td>6</td>\n      <td>June</td>\n      <td>Juni</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Rename Columns\n\n- Did we really change the name?\n\n::: {#911688f7 .cell execution_count=23}\n``` {.python .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=23}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>age</th>\n      <th>date</th>\n      <th>city</th>\n      <th>year</th>\n      <th>month_1</th>\n      <th>month_2</th>\n      <th>month_3</th>\n      <th>month_4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Zeynep</td>\n      <td>33</td>\n      <td>1990-06-03</td>\n      <td>Stuttgart</td>\n      <td>1990</td>\n      <td>1990-06</td>\n      <td>6</td>\n      <td>June</td>\n      <td>Juni</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Anna</td>\n      <td>25</td>\n      <td>1998-03-12</td>\n      <td>Berlin</td>\n      <td>1998</td>\n      <td>1998-03</td>\n      <td>3</td>\n      <td>March</td>\n      <td>März</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Tim</td>\n      <td>23</td>\n      <td>2000-01-20</td>\n      <td>Stuttgart</td>\n      <td>2000</td>\n      <td>2000-01</td>\n      <td>1</td>\n      <td>January</td>\n      <td>Januar</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Sara</td>\n      <td>21</td>\n      <td>2002-02-16</td>\n      <td>Stuttgart</td>\n      <td>2002</td>\n      <td>2002-02</td>\n      <td>2</td>\n      <td>February</td>\n      <td>Februar</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Elias</td>\n      <td>28</td>\n      <td>1995-05-02</td>\n      <td>Berlin</td>\n      <td>1995</td>\n      <td>1995-05</td>\n      <td>5</td>\n      <td>May</td>\n      <td>Mai</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Admir</td>\n      <td>20</td>\n      <td>2003-06-03</td>\n      <td>Munich</td>\n      <td>2003</td>\n      <td>2003-06</td>\n      <td>6</td>\n      <td>June</td>\n      <td>Juni</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Lina</td>\n      <td>31</td>\n      <td>1992-06-03</td>\n      <td>Stuttgart</td>\n      <td>1992</td>\n      <td>1992-06</td>\n      <td>6</td>\n      <td>June</td>\n      <td>Juni</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Rename Columns\n\n::: {#1102fdc8 .cell execution_count=24}\n``` {.python .cell-code}\ndf = df.rename(columns={'date': 'date_new_2'})\n```\n:::\n\n\n. . . \n\n::: {#5fa36564 .cell output-location='fragment' execution_count=25}\n``` {.python .cell-code}\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=25}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>age</th>\n      <th>date_new_2</th>\n      <th>city</th>\n      <th>year</th>\n      <th>month_1</th>\n      <th>month_2</th>\n      <th>month_3</th>\n      <th>month_4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Zeynep</td>\n      <td>33</td>\n      <td>1990-06-03</td>\n      <td>Stuttgart</td>\n      <td>1990</td>\n      <td>1990-06</td>\n      <td>6</td>\n      <td>June</td>\n      <td>Juni</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Anna</td>\n      <td>25</td>\n      <td>1998-03-12</td>\n      <td>Berlin</td>\n      <td>1998</td>\n      <td>1998-03</td>\n      <td>3</td>\n      <td>March</td>\n      <td>März</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Tim</td>\n      <td>23</td>\n      <td>2000-01-20</td>\n      <td>Stuttgart</td>\n      <td>2000</td>\n      <td>2000-01</td>\n      <td>1</td>\n      <td>January</td>\n      <td>Januar</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Sara</td>\n      <td>21</td>\n      <td>2002-02-16</td>\n      <td>Stuttgart</td>\n      <td>2002</td>\n      <td>2002-02</td>\n      <td>2</td>\n      <td>February</td>\n      <td>Februar</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Elias</td>\n      <td>28</td>\n      <td>1995-05-02</td>\n      <td>Berlin</td>\n      <td>1995</td>\n      <td>1995-05</td>\n      <td>5</td>\n      <td>May</td>\n      <td>Mai</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Sort Values\n\n- The `sort_values` function sorts a data frame in ascending or descending order of passed column.\n\n- Example: `df.sort_values('column_name', ascending=False)`\n\n## Sort Values\n\n::: {#a1ecc280 .cell output-location='fragment' execution_count=26}\n``` {.python .cell-code}\ndf.groupby('city')['age'].mean().round(\n    2).reset_index().sort_values('age', ascending=False)\n```\n\n::: {.cell-output .cell-output-display execution_count=26}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>city</th>\n      <th>age</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2</th>\n      <td>Stuttgart</td>\n      <td>27.0</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>Berlin</td>\n      <td>26.5</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Munich</td>\n      <td>20.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n# Task Overview and Hints\n\n## Task 1: Average Revenue by E-Shop\n\n- Hint: Use the `groupby` function to group by 'eshop_name', then use the `mean` function on 'annual_revenue'.\n\n## Task 2: E-Shop with the Highest Average Rating\n\n- Hint: Use the `groupby` function to group by 'eshop_name', calculate the mean of 'average_rating', then sort values and use `head` to get the top one.\n\n## Task 3: E-Shop Performance Over Time\n\n- Hint: Extract the year from 'date', then group by 'eshop_name' and 'year' and calculate the sum of 'annual_revenue'.\n\n## Task 4: E-Shop with the Most Social Media Followers\n\n- Hint: Use the `groupby` function to group by 'eshop_name', get the max 'social_media_followers', then sort values and use `head` to get the top one.\n\n## Task 5: Monthly Time on Site overview\n\n- Hint: Extract the month from 'date', then group by 'eshop_name' and 'month' and calculate the mean of 'time on site'.\n\n",
    "supporting": [
      "pandas_files/figure-revealjs"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}